{"version":3,"sources":["componet/TodoItem/TodoItem.js","componet/TodoList/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["TodoItem","this","props","todo","title","id","completed","className","style","transform","margin","boxShadow","onClick","changeCompleted","e","deleteTodo","editTodo","Component","TodoList","stopPropagation","state","inputValue","setState","filtered","todos","filter","handlerAddTodo","newTodos","Date","now","keyCode","editId","mappedTodos","map","fundedTodo","find","mappedTodo","searchValue","fetch","then","res","json","data","type","placeholder","value","onChange","target","onKeyDown","indexOf","trim","i","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0e404aab.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport \"./TodoItem.css\"\n\nclass TodoItem extends Component {\n\n    render() {\n        const {title, id, completed} = this.props.todo\n        return (\n            <li className=\"todoItem-container\" style={{\n                transform: completed ? \"scale(1.1)\" : \"scale(1.0)\",\n                margin: \"7px\",\n                boxShadow: completed ? \"0px 0px 10px black\" : \"0px 0px 10px red\"\n            }}\n                onClick={() => {\n                    this.props.changeCompleted(id)\n                }}\n            >\n                <span>{title}</span>\n                <div className=\"buttons-item\">\n                <span className=\"add-btn-to-item\"\n                      onClick={(e) => {\n                          this.props.deleteTodo(e, id, title)\n                      }}>\n                    <i className=\"fas fa-trash-alt\"/>\n                </span>\n                    <span className=\"edit-btn-to-item\"\n                          onClick={() => {\n                              this.props.editTodo(id)\n                          }}>\n                    <i className=\"fas fa-edit\"/>\n                </span>\n                </div>\n            </li>\n        )\n    }\n}\n\nexport default TodoItem","import React, {Component} from 'react';\nimport \"./TodoList.css\"\n\nimport TodoItem from '../TodoItem/TodoItem';\n\nclass TodoList extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            todos: [],\n            inputValue: \"\",\n            searchValue: \"\",\n            editId: null\n        }\n    }\n\n    componentDidMount() {\n        fetch(`https://jsonplaceholder.typicode.com/todos`)\n            .then(res => res.json())\n            .then(data => this.setState({todos: [...data]}))\n    }\n\n    deleteTodo = (e, id, title) => {\n        e.stopPropagation()\n        if (title === this.state.inputValue) {\n            this.setState({inputValue: ''})\n        }\n        const filtered = this.state.todos.filter((todo) => {\n            return todo.id !== id\n        })\n        this.setState({todos: [...filtered]})\n    }\n\n\n    handlerAddTodo = (e) => {\n        const newTodos = {id: Date.now(), title: this.state.inputValue, completed: false}\n        if (e.keyCode === 13) {\n            if (this.state.editId) {\n                const mappedTodos = this.state.todos.map((todo) => {\n                    if (todo.id === this.state.editId) {\n                        return {\n                            ...todo,\n                            title: this.state.inputValue\n                        }\n                    }\n                    return todo\n                })\n                this.setState({todos: [...mappedTodos], editId: null, inputValue: \"\"})\n\n            } else {\n                this.setState({todos: [newTodos, ...this.state.todos]})\n                this.setState({inputValue: \"\"})\n            }\n        }\n    }\n\n    editTodo = (id) => {\n        const fundedTodo = this.state.todos.find(todo => {\n            return todo.id === id\n        });\n        this.setState({inputValue: fundedTodo.title, editId: fundedTodo.id})\n\n\n    }\n    changeCompleted = (id) => {\n        const mappedTodo = this.state.todos.map((todo) => {\n            if (todo.id === id) {\n                return {\n                    ...todo,\n                    completed: !todo.completed\n                }\n            }\n            return todo\n        })\n        this.setState({todos: [...mappedTodo]})\n    }\n\n    render() {\n        const {todos, inputValue, searchValue} = this.state\n        return (\n            <div className=\"todolist-container\">\n                <div className=\"todolist\">\n                    <div className=\"todolist-logo\"/>\n                    <div className=\"todo-list-inputs\">\n                        <input type=\"text\" placeholder=\"search\"\n                               value={searchValue}\n                               onChange={(e) => this.setState({searchValue: e.target.value})}\n                        />\n                        <input type=\"text\" placeholder=\"add Todo\"\n                               value={inputValue}\n                               onKeyDown={this.handlerAddTodo}\n                               onChange={(e) => this.setState({inputValue: e.target.value})}\n                        />\n                    </div>\n                </div>\n                <ul className=\"todo-item\">\n                    {todos.filter((todo) => todo.title.indexOf(searchValue.trim()) === 0)\n                        .map((todo, i) => {\n                            return <TodoItem key={i}\n                                             todo={todo}\n                                             deleteTodo={this.deleteTodo}\n                                             editTodo={this.editTodo}\n                                             changeCompleted={this.changeCompleted}\n                            />\n\n                        })}\n                </ul>\n            </div>\n        )\n    }\n}\n\nexport default TodoList","import React, {Component} from 'react';\nimport TodoList from './componet/TodoList/TodoList';\n\nclass App extends Component {\n\n    render() {\n        return (\n            <div className=\"App\">\n                <TodoList/>\n            </div>\n        )\n    }\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}